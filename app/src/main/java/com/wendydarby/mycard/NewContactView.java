package com.wendydarby.mycard;

import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Bundle;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import androidx.appcompat.app.AppCompatActivity;
//import android.telephony.SmsManager;


import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;





public class NewContactView extends AppCompatActivity {
    private FloatingActionButton mSendContactButton;


    private EditText mEmailView;
    private EditText mContactnameView;
    private EditText mMobileView;
    private EditText mEventView;
    private NewContact mNewContact= new NewContact();
    private MyCard mMyCard;
    private NewContactController mContactController;

    static final int MY_PERMISSIONS_REQUEST_SEND_SMS =0;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sendtonewcontact);
        mSendContactButton = findViewById(R.id.sendcontact);

        mEmailView = findViewById(R.id.contact_email);
        mContactnameView = findViewById(R.id.newcontactname);
        mMobileView = findViewById(R.id.contact_mobile);
        mEventView = findViewById(R.id.contact_event);
//need to find out how to get enter to to traverse through tht enext field just like tab does

        Log.d("MyCard", "yes! We are making a new contact.");

        mContactController = new NewContactController(mNewContact, this, mMyCard);



        mSendContactButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Log.d("MyCard", "Let's start handling new contact info!");
                //want to get tricky? add scan ability through camera to get contact info off of a business card
                //should probably implement a clear for New Contact to make sure info isnt persisting



                mNewContact.setContactName(mContactnameView.getText().toString());
                mNewContact.setContactEmail(mEmailView.getText().toString());
                mNewContact.setContactMobile(mMobileView.getText().toString());
                mNewContact.setContactEvent(mEventView.getText().toString());


                //Save info to contacts, evernote, or both and send link to new contact via phone or email if mobile not provided.

                mContactController.sendCardtoContact(mMyCard.getEcardUrl());
                mContactController.saveContact();


            }
        });
    }



    @Override
    public void onBackPressed() {
        Intent intent = new Intent(NewContactView.this, MyCardView.class);
        finish();
        startActivity(intent);
        super.onBackPressed();
    }


    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
//        Toast.makeText(getApplicationContext(),"Result = "+resultCode, Toast.LENGTH_SHORT).show();

        Intent intent = new Intent(this, MyCardView.class);

        startActivity(intent);
    }





    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        //super.onRequestPermissionsResult(requestCode, permissions, grantResults);

        //HAL HELP do I need to do that super up there? before or after my code? it was autogenerated but the code below was in atutorial without mention of the super I think
        Log.d("MyCard", "RequestPermissionsResult...is firing.");

        switch (requestCode) {
            case MY_PERMISSIONS_REQUEST_SEND_SMS: {
                if (grantResults.length > 0
                        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
//                    SmsManager smsManager = SmsManager.getDefault();
//                    smsManager.sendTextMessage(phoneNo, null, message, null, null);
                   mContactController.sendSMSMessage(); //Jumping back to check perms again and send messasge now that permission has been requested
                    //TODO Remove the toast below once happy with the result

                    Toast.makeText(getApplicationContext(), "SMS sent from Permission request.",
                            Toast.LENGTH_LONG).show();
                } else {
                    Toast.makeText(getApplicationContext(),
                            "SMS failed, please try again.", Toast.LENGTH_LONG).show();
                    return;
                }
            }
        }

    }



}
